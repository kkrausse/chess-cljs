{"version":3,"sources":["chess/engine/worker_engine.cljs"],"mappings":";AAaA,AAAA;AAAA,AAGA,AAAA,AAAMA,AAAaC,AAASC;AAA5B,AAAA;AAKE,AAAMC,AAAE,AAAA,AAACC;AACHC,AAAW,AAAA,AAACD;AACZE,AAAO,AAAAC,AAAYN;AAFzB,AAGE,AAAA,AAAMK,AAAmB,AAASE;AAAT,AAI4B,AAAAE,AAAA,AAAAN,AAAA;AAAA,AAAA,AAAAO,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA;AAJXP,AAIW,AAAAQ,AAAA;AAFCP,AAAAA,AAAAA,AAEDQ,AAAA,AAAAD,AAAAA;AAAAF,AAAAA;AADIT,AACJ,AAAA,AAAAa,AAAAJ,AAAA,AAAAG;;AAAA,AAAA,AAAAF,AAAA;AAAA,AAAAI,AAAA,AAAAL,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAAM,AAAAN,AAAAK;;AAAA;;;;AAAA,AAAA;;;AAAA,AAAA,AAAAE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC;;AAAA,AAAAD,AAAA,AAAA;;AAAAA;;AAAAP;;AAAA,AAAA,AAAAS,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAX,AAAAC;AAAA,AAAA,AAAA,AAAAW,AAAAD,AAAA;AAAA;;AAAAA;;;;AAAA,AAAAE,AAAAC;AAAA,AAAA,AAAAC,AAAAd;AAAA,AAAA,AAAAc,AAAA,AAAAF;;AAAAE;AAAA,AAAA,AAAAC,AAAA,AAAAf,AAAA;AAAA,AAAAgB,AAAAhB;AAAA,AAAA,AAAAgB,AAAA,AAAA,AAAAC,AAAA,AAAAjB,AAAA;;AAAAgB;AAAA,AAAAJ;;;AAAA;;AAAA,AAAA,AAAA,AAAAD,AAAAF,AAAA;AAAA,AAAAT;;;;AAAAS;;;;;AAAAT;;;;;AAAAA;;;;;;;;;AAAAkB,AAAA,AAAAC,AAAA,AAAArB;AAAA,AAAA,AAAAqB,AAAAC,AAAA,AAAAxB;;AAAAuB;;AAAA,AAAA,AAAAE,AAAAH;;;AAAAtB;;;AACrD,AAAAA,AAAA,AAAAN,AAAA;AAAA,AAAA,AAAAO,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAuB;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAD,AAAAA;AAAA,AAAA,AAAA,AAAAE,AAAAF;AAAA,AAAA,AAAAE,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAAE,AAAA,AAAAH,AAAA;AAAAI,AAAA,AAAAC,AAAAC,AAAAH;AAAAH,AAAAA;AAAA,AAAA,AAAA,AAAAO,AAAAP;AAAA,AAAA,AAAAO,AAAA,AAAAH;;AAAA,AAAAG,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAN,AAAA;AAAA,AAAAO,AAAA,AAAAR,AAAA;AAAAS,AAAA,AAAAT,AAAA;AAAAU,AAAA,AAAAD,AAKqBkF;AALrB3F,AAAAA;AAAA,AAAA,AAAAlB,AAAAkB,AAAA,AAAAQ,AAAAE;;AAAA,AAAA,AAAAT,AAAA;AAAA,AAAAD,AAAAA;AAAA,AAAA,AAAAW,AAAAX,AAAA,AAAgCjC;;AAAhC,AAAA,AAAAkC,AAAA;AAAA,AAAAD,AAAAA;AAAA,AAAA,AAAA,AAAAY,AAAAZ;AAAA,AAAA,AAAAY,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAX,AAAA;AAAA,AAAAD,AAAAA;AAAA,AAAA,AAAA,AAAAa,AAAAb;AAAA,AAAA,AAAAa,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAZ,AAAA;AAAA,AAAAD,AAAAA;AAAA,AAAA,AAAA,AAAAc,AAAAd;AAAA,AAAA,AAAAc,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAb,AAAA;AAAA,AAAAE,AAAA,AAAAH,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAA,AAAAe,AAAAf;AAAA,AAAA,AAAAe,AAAA,AAAAZ;;AAAA,AAAAY,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAd,AAAA;AAAA,AAAAe,AAAA,AAAAhB,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAAhB,AAAAgB,AAAAgB;;AAAA,AAAA,AAAAf,AAAA;AAAA,AAAAgB,AAAA,AAAAjB,AAAA;AAAAkB,AAAA,AAAAlB,AAAA;AAAAQ,AAAA,AAAAW,AAAAD,AAAA;AAAAD,AAAA,AAAAE,AAAAD,AAAA;AAAAE,AAAA,AAAAH,AAAA;AAAAI,AAAA,AAAAD,AACcuB;AADd3C,AAAA,AAAAsB,AAAAtB;AAAA,AAAA,AAAAsB,AAAA,AAAAL;;AAAA,AAAAK,AAAA,AAAAd;;AAAAc;;AAAA,AAAA,AAAA,AAAAD;AAAA,AAAAE,AAAAvB;AAAA,AAAA,AAAAuB,AAAA,AAAA;;AAAAA;AAAA,AAAAC,AAAAxB;AAAA,AAAA,AAAAwB,AAAA,AAAA;;AAAAA;;AAAA;;AAAA,AAAA,AAAAvB,AAAA;AAAA,AAAAD,AAAAA;AAAA,AAAA,AAAA,AAAAyB,AAAAzB;AAAA,AAAA,AAAAyB,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAxB,AAAA;AAAA,AAAAyB,AAAA,AAAA1B,AAAA;AAAAG,AAAAuB;AAAA1B,AAAA,AAAA2B,AAAA3B;AAAA,AAAA,AAAA2B,AAAA,AAAAxB;;AAAAwB;;AAAA,AAAA,AAAA,AAAAC,AAAA5B;AAAA,AAAA,AAAA4B,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAA3B,AAAA;AAAA,AAAA4B,AAAA,AAAA7B,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAA,AAAA8B,AAAA9B;AAAA,AAAA,AAAA8B,AAAA,AAAAD;;AAAA,AAAAC,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAA7B,AAAA;AAAA,AAAAD,AAAAA;AAAA,AAAA,AAAA,AAAA+B,AAAA/B;AAAA,AAAA,AAAA+B,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAA9B,AAAA;AAAA,AAAA+B,AAAA,AAAAhC,AAAA;AAAAiC,AAAA,AAAAD;AAAAE,AAAA,AAAAD,AAAA;AAAAE,AAAA,AAAAH;AAAAI,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAJ,AAAAE;AAAApC,AAAAA;AAAA,AAAA,AAAA,AAAAsC;AAAA,AAAAC,AAAAvC;AAAA,AAAA,AAAAuC,AAAA,AAAA;;AAAAA;AAAA,AAAAC,AAAAxC;AAAA,AAAA,AAAAwC,AAAA,AAAA;;AAAAA;;AAAA;;AAAA,AAAA,AAAAvC,AAAA;AAAA,AAAAE,AAAA,AAAAH,AAAA;AAAAyC,AAAA,AAAAtC,AAAA;AAAAuC,AAAA,AAAAC,AAAAF;AAAAzC,AAAAA;AAAA,AAAA,AAAA,AAAA0C;AAAA,AAAAE,AAAA5C;AAAA,AAAA,AAAA4C,AAAA,AAAA;;AAAAA;AAAA,AAAAC,AAAA7C;AAAA,AAAA,AAAA6C,AAAA,AAAA;;AAAAA;;AAAA;;AAAA,AAAA,AAAA5C,AAAA;AAAA,AAAA+B,AAAA,AAAAhC,AAAA;AAAAgC,AAAA,AAAAhC,AAAA;AAAA8C,AAAA,AAAAd,AAAA;AAAAe,AAAA,AAAAJ,AAAAG;AAAA9C,AAAA,AAAAgD,AAAAhD;AAAA,AAAA,AAAAgD,AAAA,AAAAhB;;AAAAgB;;AAAA,AAAA,AAAA,AAAAD;AAAA,AAAAE,AAAAjD;AAAA,AAAA,AAAAiD,AAAA,AAAA;;AAAAA;AAAA,AAAAC,AAAAlD;AAAA,AAAA,AAAAkD,AAAA,AAAA;;AAAAA;;AAAA;;AAAA,AAAA,AAAAjD,AAAA;AAAA,AAAAgB,AAAA,AAAAjB,AAAA;AAAAmD,AAAA,AAAA,AAAA,AAAA,AAAA,AAGc9E,AAAAA,AAAAA,AAAiBP,AAAAA;AAH/BsF,AAAA,AAAAnC,AAImCyE;AAJnCrC,AAAA,AAAAD,AAI2BlF;AAJ3B8B,AAAA,AAAAsD,AAAAtD;AAAA,AAAA,AAAAsD,AAAA,AAAAD;;AAAA,AAAAC,AAAA,AAAAH;;AAAAG;;AAAA,AAAA,AAAA3C,AAAAX,AAAA,AAKqC/B;;AALrC,AAAA,AAAAgC,AAAA;AAAA,AAAAsD,AAAA,AAAAvD,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAA,AAAAwD,AAAAxD;AAAA,AAAA,AAAAwD,AAAA,AAAAD;;AAAA,AAAAC,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAvD,AAAA;AAAA,AAAA+B,AAAA,AAAAhC,AAAA;AAAAyD,AAAA,AAAAzD,AAAA;AAAA0D,AAAA,AAAAvC,AAAAsC,AAAA;AAAAE,AAAA,AAAAxC,AAAAsC,AAAA;AAAAtD,AAAA6B;AAAAhC,AAAA,AAAA4D,AAAA5D;AAAA,AAAA,AAAA4D,AAAA,AAAAF;;AAAA,AAAAE,AAAA,AAAAzD;;AAAA,AAAAyD,AAAA,AAAAD;;AAAAC;;AAAA,AAAA,AAAA,AAAAC,AAAA7D;AAAA,AAAA,AAAA6D,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAA5D,AAAA;AAAA,AAAA+B,AAAA,AAAAhC,AAAA;AAAA8D,AAAA,AAAAzD,AAAAC,AAAA0B;AAAAhC,AAAAA;AAAA,AAAA,AAAA,AAAA+D,AAAA/D;AAAA,AAAA,AAAA+D,AAAA,AAAAD;;AAAA,AAAAC,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAA9D,AAAA;AAAA,AAAA+D,AAAA,AAAAhE,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAA,AAAAgE;AAAA,AAAAC,AAAAjE;AAAA,AAAA,AAAAiE,AAAA,AAAA;;AAAAA;AAAA,AAAAC,AAAAlE;AAAA,AAAA,AAAAkE,AAAA,AAAA;;AAAAA;;AAAA;;AAAA,AAAA,AAAAjE,AAAA;AAAA,AAAAE,AAAA,AAAAH,AAAA;AAAAmE,AAAA,AAAAhE;AAAAiE,AAAA,AAAAD,AAAA;AAAAE,AAAA,AAAAlE;AAAAmE,AAAA,AAAAjC,AAAAgC;AAAAE,AAAA,AAAAH,AAAAE;AAAAtE,AAAAA;AAAA,AAAA,AAAA,AAAAuE;AAAA,AAAAC,AAAAxE;AAAA,AAAA,AAAAwE,AAAA,AAAA;;AAAAA;AAAA,AAAAC,AAAAzE;AAAA,AAAA,AAAAyE,AAAA,AAAA;;AAAAA;;AAAA;;AAAA,AAAA,AAAAxE,AAAA;AAAA,AAAAO,AAAA,AAAAR,AAAA;AAAA0E,AAAA,AAAA1E,AAAA;AAAA2E,AAAA,AAAA,AAAA,AAAA,AAAA,AAMctG,AAAAA,AAAAA,AAAiBP,AAAAA;AAN/B8G,AAAA,AAAApE,AAOcoF;AAPd5F,AAAA,AAAA6E,AAAA7E;AAAA,AAAA,AAAA6E,AAAA,AAAAD;;AAAA,AAAAC,AAAA,AAAAH;;AAAA,AAAAG,AAAA,AAAAF;;AAAAE;;AAAA,AAAA,AAAAlE,AAAAX,AAAA,AAQwBjC;;AARxB,AAAA,AAAAkC,AAAA;AAAA,AAAA6E,AAAA,AAAA9E,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAA,AAAA8E;AAAA,AAAAC,AAAA/E;AAAA,AAAA,AAAA+E,AAAA,AAAA;;AAAAA;AAAA,AAAAC,AAAAhF;AAAA,AAAA,AAAAgF,AAAA,AAAA;;AAAAA;;AAAA;;AAAA,AAAA,AAAA/E,AAAA;AAAA,AAAA+B,AAAA,AAAAhC,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAA,AAAAiF,AAAAjF;AAAA,AAAA,AAAAiF,AAAA,AAAAjD;;AAAA,AAAAiD,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAhF,AAAA;AAAA,AAAAD,AAAAA;AAAA,AAAA,AAAA,AAAAkF,AAAAlF;AAAA,AAAA,AAAAkF,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAjF,AAAA;AAAA,AAAAkF,AAAA,AAAAnF,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAA,AAAAoF,AAAApF;AAAA,AAAA,AAAAoF,AAAA,AAAAD;;AAAA,AAAAC,AAAA,AAAA;;AAAAA;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAnG;;AAAA,AAAAmG,AAAA,AAAA;;AAAAA;;AAAArF;;AAAA,AAAA,AAAAb,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAX,AAAAuB;AAAA,AAAA,AAAA,AAAAX,AAAAD,AAAA;AAAA;;AAAAA;;;;AAAA,AAAAE,AAAAgG;AAAA,AAAA,AAAAC,AAAAvF;AAAA,AAAA,AAAAuF,AAAA,AAAAjG;;AAAAiG;AAAA,AAAA,AAAA9F,AAAA,AAAAO,AAAA;AAAA,AAAAwF,AAAAxF;AAAA,AAAA,AAAAwF,AAAA,AAAA,AAAA7F,AAAA,AAAAK,AAAA;;AAAAwF;AAAA,AAAAlG;;;AAAA;;AAAA,AAAA,AAAA,AAAAD,AAAAF,AAAA;AAAA,AAAAa;;;;AAAAb;;;;;AAAAa;;;;;AAAAA;;;;;;;;;AAAAJ,AAAA,AAAA6F,AAAA,AAAAjH;AAAA,AAAA,AAAAiH,AAAA3F,AAAA,AAAAxB;;AAAAmH;;AAAA,AAAA,AAAA1F,AAAAH;;;AAAAtB;AASAP;;AAGJ,AAAA,AAAA8H,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAU,AAAA,AAACjI;;AACpB,AAAA,AAAA6H,AAAAC,AAAAC,AAAAG;AAAA;AAAA,AAAA,AAASC,AAAiB,AAAA,AAACnI;;AAC3B,AAAA,AAAA6H,AAAAC,AAAAC,AAAAK;AAAA;AAAA,AAAA,AAASC,AAAE;AAEE,AAAAC,AAAA,AAAA7G,AAAU,AAAA,AAACyH;AAAXX,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQQ;AAAR,AAAA,AACE,AAAA3I,AAAA,AAAAN,AAAA;AAAA,AAAA,AAAAO,AAAA;;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA;AAAA0I;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAC,AAAA,AAAA,AAA0BzJ,AAA2BqJ;AAArDE,AAAAA;AAAA,AAAA,AAAArI,AAAAqI,AAAA,AAAAE,AAAQlB;;AAAR,AAAA,AAAAiB,AAAA;AAAA,AAAAE,AAAA,AAAAH,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAAnI,AAAAmI,AAAAG;;AAAA;;;;;AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAArI;;AAAA,AAAAqI,AAAA,AAAA;;AAAAA;;AAAAJ;;AAAA,AAAA,AAAAhI,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAX,AAAA0I;AAAA,AAAA,AAAA,AAAA9H,AAAAD,AAAA;AAAA;;AAAAA;;;;AAAA,AAAAE,AAAAkI;AAAA,AAAA,AAAAC,AAAAN;AAAA,AAAA,AAAAM,AAAA,AAAAnI;;AAAAmI;AAAA,AAAA,AAAAhI,AAAA,AAAA0H,AAAA;AAAA,AAAAO,AAAAP;AAAA,AAAA,AAAAO,AAAA,AAAA,AAAA/H,AAAA,AAAAwH,AAAA;;AAAAO;AAAA,AAAApI;;;AAAA;;AAAA,AAAA,AAAA,AAAAD,AAAAF,AAAA;AAAA,AAAAgI;;;;AAAAhI;;;;;AAAAgI;;;;;AAAAA;;;;;;;;;;AAAAvH,AAAA,AAAA+H,AAAA,AAAAnJ;AAAA,AAAA,AAAAmJ,AAAA7H,AAAA,AAAAxB;;AAAAqJ;;AAAA,AAAA,AAAA5H,AAAAH;;;;AAAAtB;AADF;AAAA,AAAAgI;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAC,AAAA,AAAAjH,AAAA6G;AAAA,AAAA,AAAAI;AAAA,AAAA,AAAAJ,AAAAI;AAAA,AAAA,AAAA,AAAAC,AAAAL;AAAA,AAAAM,AAAA,AAAAC,AAAAP;AAAA,AAAA,AAAA,AAAAQ,AAAAR;AAAAM;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAjH,AAAA2G,AAAQW;AAAR,AAAA,AACE,AAAA3I,AAAA,AAAAN,AAAA;AAAA,AAAA,AAAAO,AAAA;;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA;AAAAmJ;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAC,AAAA,AAAA,AAA0BlK,AAA2BqJ;AAArDW,AAAAA;AAAA,AAAA,AAAA9I,AAAA8I,AAAA,AAAAE,AAAQ3B;;AAAR,AAAA,AAAA0B,AAAA;AAAA,AAAAE,AAAA,AAAAH,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAA5I,AAAA4I,AAAAG;;AAAA;;;;;AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAA9I;;AAAA,AAAA8I,AAAA,AAAA;;AAAAA;;AAAAJ;;AAAA,AAAA,AAAAzI,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAX,AAAAmJ;AAAA,AAAA,AAAA,AAAAvI,AAAAD,AAAA;AAAA;;AAAAA;;;;AAAA,AAAAE,AAAA2I;AAAA,AAAA,AAAAC,AAAAN;AAAA,AAAA,AAAAM,AAAA,AAAA5I;;AAAA4I;AAAA,AAAA,AAAAzI,AAAA,AAAAmI,AAAA;AAAA,AAAAO,AAAAP;AAAA,AAAA,AAAAO,AAAA,AAAA,AAAAxI,AAAA,AAAAiI,AAAA;;AAAAO;AAAA,AAAA7I;;;AAAA;;AAAA,AAAA,AAAA,AAAAD,AAAAF,AAAA;AAAA,AAAAyI;;;;AAAAzI;;;;;AAAAyI;;;;;AAAAA;;;;;;;;;;AAAAhI,AAAA,AAAAwI,AAAA,AAAA5J;AAAA,AAAA,AAAA4J,AAAAtI,AAAA,AAAAxB;;AAAA8J;;AAAA,AAAA,AAAArI,AAAAH;;;;AAAAtB;AADF;AAAA,AAAA,AAAA0I,AAAAV;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AAIA,AAAAhI,AAAA,AAAAN,AAAA;AAAA,AAAA,AAAAO,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA4J;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAD,AAAAA;AAAA,AAAA,AAAA,AAAAE,AAAAF;AAAA,AAAA,AAAAE,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAAE,AAAA,AAAAH,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAA,AAAAI,AAAAJ;AAAA,AAAA,AAAAI,AAAA,AAAAD;;AAAA,AAAAC,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAH,AAAA;AAAA,AAAAD,AAAAA;AAAA,AAAA,AAAA1H,AAAA0H,AAAA,AAAgCpC;;AAAhC,AAAA,AAAAqC,AAAA;AAAA,AAAAI,AAAA,AAAAL,AAAA;AAAAA,AAAA,AAAAM,AAAAN;AAAA,AAAA,AAAAM,AAAA,AAAAD;;AAAAC;;AAAA,AAAA,AAAAhI,AAAA0H,AAAA,AAGmClC;;AAHnC,AAAA,AAAAmC,AAAA;AAAA,AAAAD,AAAAA;AAAA,AAAA,AAAA,AAAAO,AAAAP;AAAA,AAAA,AAAAO,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAN,AAAA;AAAA,AAAAO,AAAA,AAAAR,AAAA;AAAAS,AAAA,AAAAD;AAAAE,AAAA,AAAAD,AAAA;AAAAE,AAAA,AAAAH;AAAAI,AAAA,AAAA5G,AAAA2G;AAAAE,AAAA,AAAAH,AAAAE;AAAAZ,AAAAA;AAAA,AAAA,AAAA,AAAAa;AAAA,AAAAC,AAAAd;AAAA,AAAA,AAAAc,AAAA,AAAA;;AAAAA;AAAA,AAAAC,AAAAf;AAAA,AAAA,AAAAe,AAAA,AAAA;;AAAAA;;AAAA;;AAAA,AAAA,AAAAd,AAAA;AAAA,AAAAO,AAAA,AAAAR,AAAA;AAAAgB,AAAA,AAAAhJ,AAAAC,AAAAuI;AAAAR,AAAAA;AAAA,AAAA,AAAA,AAAAiB,AAAAjB;AAAA,AAAA,AAAAiB,AAAA,AAAAD;;AAAA,AAAAC,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAhB,AAAA;AAAA,AAAAO,AAAA,AAAAR,AAAA;AAAAkB,AAAA,AAAAV,AAAA;AAAAW,AAAA,AAAA7G,AAAA4G;AAAAlB,AAAAA;AAAA,AAAA,AAAA,AAAAmB;AAAA,AAAAC,AAAApB;AAAA,AAAA,AAAAoB,AAAA,AAAA;;AAAAA;AAAA,AAAAC,AAAArB;AAAA,AAAA,AAAAqB,AAAA,AAAA;;AAAAA;;AAAA;;AAAA,AAAA,AAAApB,AAAA;AAAA,AAAAO,AAAA,AAAAR,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAA,AAAAsB,AAAAtB;AAAA,AAAA,AAAAsB,AAAA,AAAAd;;AAAA,AAAAc,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAArB,AAAA;AAAA,AAAAD,AAAAA;AAAA,AAAA,AAAA,AAAAuB,AAAAvB;AAAA,AAAA,AAAAuB,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAtB,AAAA;AAAA,AAAAI,AAAA,AAAAL,AAAA;AAAAwB,AAAA,AAAAxB,AAAA;AAAAQ,AAAAH;AAAAoB,AAAAD;AAAAxB,AAAA,AAAA0B,AAAA1B;AAAA,AAAA,AAAA0B,AAAA,AAAAD;;AAAA,AAAAC,AAAA,AAAAlB;;AAAAkB;;AAAA,AAAA,AAAA,AAAAC,AAAA3B;AAAA,AAAA,AAAA2B,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAA1B,AAAA;AAAA,AAAA2B,AAAA,AAAA5B,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAA,AAAA4B;AAAA,AAAAC,AAAA7B;AAAA,AAAA,AAAA6B,AAAA,AAAA;;AAAAA;AAAA,AAAAC,AAAA9B;AAAA,AAAA,AAAA8B,AAAA,AAAA;;AAAAA;;AAAA;;AAAA,AAAA,AAAA7B,AAAA;AAAA,AAAA8B,AAAA,AAAA/B,AAAA;AAAAgC,AAAA,AAAAD;AAAAE,AAAA,AAAAD,AAAA;AAAAE,AAAA,AAAAH;AAAAI,AAAA,AAAAnI,AAAAkI;AAAAE,AAAA,AAAAH,AAAAE;AAAAnC,AAAAA;AAAA,AAAA,AAAA,AAAAoC;AAAA,AAAAC,AAAArC;AAAA,AAAA,AAAAqC,AAAA,AAAA;;AAAAA;AAAA,AAAAC,AAAAtC;AAAA,AAAA,AAAAsC,AAAA,AAAA;;AAAAA;;AAAA;;AAAA,AAAA,AAAArC,AAAA;AAAA,AAAA8B,AAAA,AAAA/B,AAAA;AAAAuC,AAAA,AAAAvC,AAAA;AAAAQ,AAAAuB;AAAAN,AAAAc;AAAAvC,AAAA,AAAAwC,AAAAxC;AAAA,AAAA,AAAAwC,AAAA,AAAAf;;AAAA,AAAAe,AAAA,AAAAhC;;AAAAgC;;AAAA,AAAA,AAAA,AAAAC,AAAAzC;AAAA,AAAA,AAAAyC,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAxC,AAAA;AAAA,AAAA8B,AAAA,AAAA/B,AAAA;AAAA+B,AAAA,AAAA/B,AAAA;AAAA0C,AAAA,AAAAX,AAAA;AAAAY,AAAA,AAAArI,AAAAoI;AAAA1C,AAAA,AAAA4C,AAAA5C;AAAA,AAAA,AAAA4C,AAAA,AAAAb;;AAAAa;;AAAA,AAAA,AAAA,AAAAD;AAAA,AAAAE,AAAA7C;AAAA,AAAA,AAAA6C,AAAA,AAAA;;AAAAA;AAAA,AAAAC,AAAA9C;AAAA,AAAA,AAAA8C,AAAA,AAAA;;AAAAA;;AAAA;;AAAA,AAAA,AAAA7C,AAAA;AAAA,AAAAwB,AAAA,AAAAzB,AAAA;AAAA+C,AAAA,AAAA/C,AAAA;AAAAgD,AAAA,AAAAlK,AAAAiK,AAAA;AAAAE,AAAA,AAAAnK,AAAAiK,AAAA;AAAAG,AAAA,AAAAzB,AAAAwB,AAAAxB,AAAAwB,AAEsB0B,AAAAA,AAAAA;AAFtBxB,AAAA,AAAAD,AAAAF,AAEU0B;AAFV1E,AAAA,AAAAoD,AAAApD;AAAA,AAAA,AAAAoD,AAAA,AAAAD;;AAAAC;;AAAA,AAAA,AAAA9K,AAAA0H,AAAA,AAGoBpC;;AAHpB,AAAA,AAAAqC,AAAA;AAAA,AAAAD,AAAAA;AAAA,AAAA,AAAA,AAAAqD,AAAArD;AAAA,AAAA,AAAAqD,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAApD,AAAA;AAAA,AAAAqD,AAAA,AAAAtD,AAAA;AAAAuD,AAAA,AAAAzK,AAAAwK,AAAA;AAAAE,AAAA,AAAA1K,AAAAwK,AAAA;AAAAtD,AAAA,AAAAyD,AAAAzD;AAAA,AAAA,AAAAyD,AAAA,AAAAF;;AAAA,AAAAE,AAAA,AAAAD;;AAAAC;;AAAA,AAAA,AAAAnL,AAAA0H,AAAA,AAC0BlC;;AAD1B,AAAA,AAAAmC,AAAA;AAAA,AAAA8B,AAAA,AAAA/B,AAAA;AAAA0D,AAAA,AAAA1L,AAAAC,AAAA8J;AAAA/B,AAAAA;AAAA,AAAA,AAAA,AAAA2D,AAAA3D;AAAA,AAAA,AAAA2D,AAAA,AAAAD;;AAAA,AAAAC,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAA1D,AAAA;AAAA,AAAA2D,AAAA,AAAA5D,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAA,AAAA4D;AAAA,AAAAC,AAAA7D;AAAA,AAAA,AAAA6D,AAAA,AAAA;;AAAAA;AAAA,AAAAC,AAAA9D;AAAA,AAAA,AAAA8D,AAAA,AAAA;;AAAAA;;AAAA;;AAAA,AAAA,AAAA7D,AAAA;AAAA,AAAA8D,AAAA,AAAA/D,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAArJ,AAAAqJ,AAAA+D;;AAAA,AAAA,AAAA9D,AAAA;AAAA,AAAAD,AAAAA;AAAA,AAAA,AAAA,AAAAgE,AAAAhE;AAAA,AAAA,AAAAgE,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAA/D,AAAA;AAAA,AAAA8B,AAAA,AAAA/B,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAA,AAAAiE,AAAAjE;AAAA,AAAA,AAAAiE,AAAA,AAAAlC;;AAAA,AAAAkC,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAhE,AAAA;AAAA,AAAAD,AAAAA;AAAA,AAAA,AAAA,AAAAkE,AAAAlE;AAAA,AAAA,AAAAkE,AAAA,AAAA;;AAAA,AAAAA,AAAA,AAAA;;AAAAA;AAAA;;AAAA,AAAA,AAAAjE,AAAA;AAAA,AAAAkE,AAAA,AAAAnE,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAA,AAAAoE,AAAApE;AAAA,AAAA,AAAAoE,AAAA,AAAAD;;AAAA,AAAAC,AAAA,AAAA;;AAAAA;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAxN;;AAAA,AAAAwN,AAAA,AAAA;;AAAAA;;AAAArE;;AAAA,AAAA,AAAAlJ,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAX,AAAA4J;AAAA,AAAA,AAAA,AAAAhJ,AAAAD,AAAA;AAAA;;AAAAA;;;;AAAA,AAAAE,AAAAqN;AAAA,AAAA,AAAAC,AAAAvE;AAAA,AAAA,AAAAuE,AAAA,AAAAtN;;AAAAsN;AAAA,AAAA,AAAAnN,AAAA,AAAA4I,AAAA;AAAA,AAAAwE,AAAAxE;AAAA,AAAA,AAAAwE,AAAA,AAAA,AAAAlN,AAAA,AAAA0I,AAAA;;AAAAwE;AAAA,AAAAvN;;;AAAA;;AAAA,AAAA,AAAA,AAAAD,AAAAF,AAAA;AAAA,AAAAkJ;;;;AAAAlJ;;;;;AAAAkJ;;;;;AAAAA;;;;;;;;;AAAAzI,AAAA,AAAAkN,AAAA,AAAAtO;AAAA,AAAA,AAAAsO,AAAAhN,AAAA,AAAAxB;;AAAAwO;;AAAA,AAAA,AAAA/M,AAAAH;;;AAAAtB;;;;AAKb,AAAA,AAAM0O,AAAgBC,AAAYC;AAAlC,AACE,AAAA5O,AAAA,AAAAN,AAAA;AAAA,AAAA,AAAAO,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA0O;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAC,AAAA,AAAAF,AAAA;AAAAE,AAAA,AAAA,AAAcrP;AAAdsP,AAAA,AAAA,AAAA;AAAAC,AAAA,AAAAF,AAEwBH;AAFxBM,AAAA,AAAAC,AAAAH,AAAAC;AAAAJ,AAAA,AAAAO,AAAAP;AAAA,AAAA,AAAAO,AAAA,AAAAL;;AAAAK;;AAAA,AAAA,AAAA5O,AAAAqO,AAAA,AAAAK,AACUP;;AADV,AAAA,AAAAG,AAAA;AAAA,AAAAC,AAAA,AAAAF,AAAA;AAAAQ,AAAA,AAAAR,AAAA;AAAAA,AAAA,AAAAS,AAAAT;AAAA,AAAA,AAAAS,AAAA,AAAAD;;AAAAC;;AAAA,AAAA,AAAAjN,AAAAwM,AAAA,AAAAE;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAAS,AAAA,AAAAV,AAAA;AAAAA,AAAA,AAAAW,AAAAX;AAAA,AAAA,AAAAW,AAAA,AAAAD;;AAAAC;;AAAA,AAAA,AAAAhP,AAAAqO,AAAA,AAIYhH,AAAiB8G;;AAJ7B,AAAA,AAAAG,AAAA;AAAA,AAAAS,AAAA,AAAAV,AAAA;AAAAY,AAAA,AAAAZ,AAAA;AAAAA,AAAA,AAAAa,AAAAb;AAAA,AAAA,AAAAa,AAAA,AAAAD;;AAAAC;;AAAA,AAAA,AAAAhP,AAAAmO,AAAAU;;AAAA;;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAA/O;;AAAA,AAAA+O,AAAA,AAAA;;AAAAA;;AAAAd;;AAAA,AAAA,AAAAhO,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAX,AAAA0O;AAAA,AAAA,AAAA,AAAA9N,AAAAD,AAAA;AAAA;;AAAAA;;;;AAAA,AAAAE,AAAA4O;AAAA,AAAA,AAAAC,AAAAhB;AAAA,AAAA,AAAAgB,AAAA,AAAA7O;;AAAA6O;AAAA,AAAA,AAAA1O,AAAA,AAAA0N,AAAA;AAAA,AAAAiB,AAAAjB;AAAA,AAAA,AAAAiB,AAAA,AAAA,AAAAzO,AAAA,AAAAwN,AAAA;;AAAAiB;AAAA,AAAA9O;;;AAAA;;AAAA,AAAA,AAAA,AAAAD,AAAAF,AAAA;AAAA,AAAAgO;;;;AAAAhO;;;;;AAAAgO;;;;;AAAAA;;;;;;;;;AAAAvN,AAAA,AAAAyO,AAAA,AAAA7P;AAAA,AAAA,AAAA6P,AAAAvO,AAAA,AAAAxB;;AAAA+P;;AAAA,AAAA,AAAAtO,AAAAH;;;AAAAtB;;AAOF,AAAA,AAAA,AAAAgQ,AAAMjQ;AAAN,AAAA,AAAAkQ,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAlQ,AAAAqQ;;;AAAA,AAAA,AAAA,AAAA,AAAMrQ,AAAUyQ;AAAhB,AACE,AAAA,AAACC,AAAwBD;;AACzB,AAACE,AAAKF;;;AAFR,AAAA,AAAA,AAAMzQ;;AAAN;AAAA,AAAA,AAAA,AAAAuQ,AAAMvQ;AAAN,AAAA,AAAAwQ,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAApP,AAAAmP;;;AAAA,AAIA,AAAA,AAAMK,AAAUC;AAAhB,AACE,AAAA5Q,AAAA,AAAAN,AAAA;AAAA,AAAA,AAAAO,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA0Q;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAC,AAAA,AAAAF,AAAA;AAAAE,AAAA,AAAA,AAAcrR;AAAdsR,AAAA,AAAA,AAAA;AAAAC,AAAA,AAAAF,AACkCH;AADlCM,AAAA,AAAA/B,AAAA6B,AAAAC;AAAAJ,AAAA,AAAAM,AAAAN;AAAA,AAAA,AAAAM,AAAA,AAAAJ;;AAAAI;;AAAA,AAAA,AAAA3Q,AAAAqQ,AAAA,AAAAK,AACUvJ;;AADV,AAAA,AAAAmJ,AAAA;AAAA,AAAAC,AAAA,AAAAF,AAAA;AAAAO,AAAA,AAAAP,AAAA;AAAAA,AAAA,AAAAQ,AAAAR;AAAA,AAAA,AAAAQ,AAAA,AAAAD;;AAAAC;;AAAA,AAAA,AAAAhP,AAAAwO,AAAA,AAAAE;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAAQ,AAAA,AAAAT,AAAA;AAAAA,AAAAA;AAAA,AAAA,AAAAnQ,AAAAmQ,AAAAS;;AAAA;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAA3Q;;AAAA,AAAA2Q,AAAA,AAAA;;AAAAA;;AAAAV;;AAAA,AAAA,AAAAhQ,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAX,AAAA0Q;AAAA,AAAA,AAAA,AAAA9P,AAAAD,AAAA;AAAA;;AAAAA;;;;AAAA,AAAAE,AAAAwQ;AAAA,AAAA,AAAAC,AAAAZ;AAAA,AAAA,AAAAY,AAAA,AAAAzQ;;AAAAyQ;AAAA,AAAA,AAAAtQ,AAAA,AAAA0P,AAAA;AAAA,AAAAa,AAAAb;AAAA,AAAA,AAAAa,AAAA,AAAA,AAAArQ,AAAA,AAAAwP,AAAA;;AAAAa;AAAA,AAAA1Q;;;AAAA;;AAAA,AAAA,AAAA,AAAAD,AAAAF,AAAA;AAAA,AAAAgQ;;;;AAAAhQ;;;;;AAAAgQ;;;;;AAAAA;;;;;;;;;AAAAvP,AAAA,AAAAqQ,AAAA,AAAAzR;AAAA,AAAA,AAAAyR,AAAAnQ,AAAA,AAAAxB;;AAAA2R;;AAAA,AAAA,AAAAlQ,AAAAH;;;AAAAtB;;AAIF,AAAK4R,AACD;AAAA,AAAA,AAAArK,AAAAC,AAAAC,AAAAoK;AAAA;AAAA,AAAA,AAAA;;;;;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAAC;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAD,AAAAE;;;AAAA,AAAA,AAAA,AAAAF,AAAA,AAAAC;;AAAA,AAAA,AAAAA,AAAA;AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAAF,AAAA/N;;AAAA,AAAA,AAAA,AAAA+N,AAAA,AACeQ,AAAEC,AAAMC;;AADvB,AAAA,AAAA,AACeF;AADf,AASuC,AAAAtS,AAAA,AAAAN,AAAA;AAAA,AAAA,AAAAO,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAuS;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAC,AAAA,AAAAC,AAAAF,AAAA,AAAAG,AAAA,AAAA;AAAA,AAAAC,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAA,AAAA,AAAAF;;AAAAA;;AARQX;;AAQR,AAAA,AAAA,AAAAM,AAAAC,AAAA,AAAAC,AAAAF,AAAA,AAAAG,AAAA,AAAA;AAAA,AAAAC,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAA,AAAA,AAAAF;;AAAAA;;AARcV;;AAQd,AAAAK;;;;;;AAAAQ,AAAA,AAAA;AAAAC,AAAA,AAAAL,AAAAL,AAAAS;AAJC1C,AAID4C,AAAA,AAAAD;AAAAZ,AAAAA;AAAA,AAAA,AAAArQ,AAAAqQ,AAAA,AAAAa;;AAAA,AAAA,AAAAZ,AAAA;AAAA,AAAAa,AAAA,AAAAd,AAAA;AAAAe,AAAA,AAAA,AAAAD;AADCf,AACDiB,AAAA,AAAAD;AAAAf,AAAAA;AAAA,AAAA,AAAAhS,AAAAgS,AAAAgB;;AAAA;;;;AAAA,AAAA;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAA/S;;AAAA,AAAA+S,AAAA,AAAA;;AAAAA;;AAAAjB;;AAAA,AAAA,AAAA7R,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAX,AAAAuS;AAAA,AAAA,AAAA,AAAA3R,AAAAD,AAAA;AAAA;;AAAAA;;;;AAAA,AAAAE,AAAA4S;AAAA,AAAA,AAAAC,AAAAnB;AAAA,AAAA,AAAAmB,AAAA,AAAA7S;;AAAA6S;AAAA,AAAA,AAAA1S,AAAA,AAAAuR,AAAA;AAAA,AAAAoB,AAAApB;AAAA,AAAA,AAAAoB,AAAA,AAAA,AAAAzS,AAAA,AAAAqR,AAAA;;AAAAoB;AAAA,AAAA9S;;;AAAA;;AAAA,AAAA,AAAA,AAAAD,AAAAF,AAAA;AAAA,AAAA6R;;;;AAAA7R;;;;;AAAA6R;;;;;AAAAA;;;;;;;;;AAAApR,AAAA,AAAAyS,AAAA,AAAA7T;AAAA,AAAA,AAAA6T,AAAAvS,AAAA,AAAAxB;;AAAA+T;;AAAA,AAAA,AAAAtS,AAAAH;;;AAAAtB;;;AATvC,AAAA,AAAA,AAAA8R,AAAA,AAWmBQ,AAAEC,AAAMyB;;AAX3B,AAAA,AAAA,AAWmB1B;AAXnB,AAmBuC,AAAAtS,AAAA,AAAAN,AAAA;AAAA,AAAA,AAAAO,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA8T;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAtB,AAAA,AAAAC,AAAAqB,AAAA,AAAApB,AAAA,AAAA;AAAA,AAAAC,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAA,AAAA,AAAAF;;AAAAA;;AARaX;;AAQb,AAAA,AAAA,AAAA6B,AAAAtB,AAAA,AAAAC,AAAAqB,AAAA,AAAApB,AAAA,AAAA;AAAA,AAAAC,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAA,AAAA,AAAAF;;AAAAA;;AARmBc;;AAQnB,AAAAI;;;;;;AAAAC,AAAA,AAAA;AAAAC,AAAA,AAAArB,AAAAkB,AAAAE;AAJC1D,AAID4D,AAAA,AAAAD;AAAAL,AAAAA;AAAA,AAAA,AAAA5R,AAAA4R,AAAA,AAAAM;;AAAA,AAAA,AAAAL,AAAA;AAAA,AAAAM,AAAA,AAAAP,AAAA;AAAAQ,AAAA,AAAA,AAAAD;AADC/B,AACDiC,AAAA,AAAAD;AAAAR,AAAAA;AAAA,AAAA,AAAAvT,AAAAuT,AAAAS;;AAAA;;;;AAAA,AAAA;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAA/T;;AAAA,AAAA+T,AAAA,AAAA;;AAAAA;;AAAAV;;AAAA,AAAA,AAAApT,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAX,AAAA8T;AAAA,AAAA,AAAA,AAAAlT,AAAAD,AAAA;AAAA;;AAAAA;;;;AAAA,AAAAE,AAAA4T;AAAA,AAAA,AAAAC,AAAAZ;AAAA,AAAA,AAAAY,AAAA,AAAA7T;;AAAA6T;AAAA,AAAA,AAAA1T,AAAA,AAAA8S,AAAA;AAAA,AAAAa,AAAAb;AAAA,AAAA,AAAAa,AAAA,AAAA,AAAAzT,AAAA,AAAA4S,AAAA;;AAAAa;AAAA,AAAA9T;;;AAAA;;AAAA,AAAA,AAAA,AAAAD,AAAAF,AAAA;AAAA,AAAAoT;;;;AAAApT;;;;;AAAAoT;;;;;AAAAA;;;;;;;;;AAAA3S,AAAA,AAAAyT,AAAA,AAAA7U;AAAA,AAAA,AAAA6U,AAAAvT,AAAA,AAAAxB;;AAAA+U;;AAAA,AAAA,AAAAtT,AAAAH;;;AAAAtB;;;AAnBvC,AAAA,AAAA,AAAA8R,AAAA,AAqBcQ,AAAEC,AAAMyB;;AArBtB,AAAA,AAAA,AAqBc1B;AArBd,AAqCS,AAAAtS,AAAA,AAAAN,AAAA;AAAA,AAAA,AAAAO,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAoW;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA;AALc,AAAKL,AAAEC,AAKrB,AAAAK,AAAA,AAAA;AALc,AAAU,AAACrD,AAAKgD,AAAED;;;AAKhCO,AAAA,AAAAC;AAdK,AAAKnE,AAcVoE,AAAA,AAAA;AAdK,AAOgB,AAAA5W,AAAA,AAAAN,AAAA;AAAA,AAAA,AAAAO,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA+U;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAvC,AAAA,AAAAC,AAAAsC,AAAA,AAAArC,AAAA,AAAA;AAAA,AAAAC,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAA,AAAA,AAAAF;;AAAAA;;AAPaX;;AAOb,AAAA,AAAA,AAAA8C,AAAAvC,AAAA,AAAAC,AAAAsC,AAAA,AAAArC,AAAA,AAAA;AAAA,AAAAC,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAA,AAAA,AAAAF;;AAAAA;;AAPmBV;;AAOnB,AAAA6C;;;;;;AAAAC,AAAA,AAAA;AAAAC,AAAA,AAAAtC,AAAAmC,AAAAE;AAJC3E,AAID6E,AAAA,AAAAD;AAAAL,AAAAA;AAAA,AAAA,AAAA7S,AAAA6S,AAAA,AAAAM;;AAAA,AAAA,AAAAL,AAAA;AAAA,AAAAM,AAAA,AAAAP,AAAA;AAAAQ,AAAA,AAAA,AAAAD;AADChD,AACDkD,AAAA,AAAAD;AAAAR,AAAAA;AAAA,AAAA,AAAAxU,AAAAwU,AAAAS;;AAAA;;;;AAAA,AAAA;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAhV;;AAAA,AAAAgV,AAAA,AAAA;;AAAAA;;AAAAV;;AAAA,AAAA,AAAArU,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAX,AAAA+U;AAAA,AAAA,AAAA,AAAAnU,AAAAD,AAAA;AAAA;;AAAAA;;;;AAAA,AAAAE,AAAA6U;AAAA,AAAA,AAAAC,AAAAZ;AAAA,AAAA,AAAAY,AAAA,AAAA9U;;AAAA8U;AAAA,AAAA,AAAA3U,AAAA,AAAA+T,AAAA;AAAA,AAAAa,AAAAb;AAAA,AAAA,AAAAa,AAAA,AAAA,AAAA1U,AAAA,AAAA6T,AAAA;;AAAAa;AAAA,AAAA/U;;;AAAA;;AAAA,AAAA,AAAA,AAAAD,AAAAF,AAAA;AAAA,AAAAqU;;;;AAAArU;;;;;AAAAqU;;;;;AAAAA;;;;;;;;;AAAA5T,AAAA,AAAA0U,AAAA,AAAA9V;AAAA,AAAA,AAAA8V,AAAAxU,AAAA,AAAAxB;;AAAAgW;;AAAA,AAAA,AAAAvU,AAAAH;;;AAAAtB;;;AARLgV,AAAazC,AAAMyB,AAenC6C,AAAA;AAdC5B,AAcD6B,AAAA,AAAAF,AAAAC;AANCZ,AAMDc,AAAA,AAAAD;AALCZ,AAKDc,AAAA,AAAAP,AAAAC,AAAAK;AAAAR,AAAAA;AAAA,AAAA,AAAAlU,AAAAkU,AAAA,AAAAS;;AAAA,AAAA,AAAAR,AAAA;AAAA,AAAAS,AAAA,AAAAV,AAAA;AAHCF,AAAKC,AAGNY,AAAA,AAAAD;AAFCxE,AAED0E,AAAA,AAAA,AAAAD;AADC7V,AACD+V,AAAA,AAAAD;AAAAZ,AAAAA;AAAA,AAAA,AAAA7V,AAAA6V,AAAAa;;AAAA;;;;AAAA,AAAA;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAzW;;AAAA,AAAAyW,AAAA,AAAA;;AAAAA;;AAAAd;;AAAA,AAAA,AAAA1V,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAX,AAAAoW;AAAA,AAAA,AAAA,AAAAxV,AAAAD,AAAA;AAAA;;AAAAA;;;;AAAA,AAAAE,AAAAsW;AAAA,AAAA,AAAAC,AAAAhB;AAAA,AAAA,AAAAgB,AAAA,AAAAvW;;AAAAuW;AAAA,AAAA,AAAApW,AAAA,AAAAoV,AAAA;AAAA,AAAAiB,AAAAjB;AAAA,AAAA,AAAAiB,AAAA,AAAA,AAAAnW,AAAA,AAAAkV,AAAA;;AAAAiB;AAAA,AAAAxW;;;AAAA;;AAAA,AAAA,AAAA,AAAAD,AAAAF,AAAA;AAAA,AAAA0V;;;;AAAA1V;;;;;AAAA0V;;;;;AAAAA;;;;;;;;;AAAAjV,AAAA,AAAAmW,AAAA,AAAAvX;AAAA,AAAA,AAAAuX,AAAAjW,AAAA,AAAAxB;;AAAAyX;;AAAA,AAAA,AAAAhW,AAAAH;;;AAAAtB;;;AArCT,AAAA,AAAA8R,AAAA;AAAA,AAAA,AAAA;;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA,AAAAG,AAAAC,AAAAC;AAAA,AAAA,AAAAC,AAAAF,AAAA;;;AAAA;;;AAAAG,AAAA,AAAAL;AAAA,AAAA,AAAAF,AAAAE;;;AAAAF;;AAAA,AAAAA,AAAA","names":["chess.engine.worker-engine/load-worker","filename","id","c","cljs.core.async.chan","reply-chan","worker","js/Worker","e","chess.engine.worker-engine/printl","c__8718__auto__","cljs.core.async.impl.dispatch/run","f__8719__auto__","switch__8646__auto__","state_9178","state_val_9179","inst_9167","inst_9168","cljs.core.async.impl.ioc-helpers/put!","inst_9171","cljs.core.async.impl.ioc-helpers/return-chan","statearr-9182","state-machine__8647__auto__","ret-value__8648__auto__","result__8649__auto__","cljs.core/keyword-identical?","ex__8650__auto__","e9185","statearr-9187","cljs.core/seq","statearr-9190","cljs.core/first","state__8720__auto__","statearr-9191","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","state_9287","state_val_9288","statearr-9296","inst_9231","inst_9254","cljs.core.apply","cljs.core/hash-map","statearr-9298","inst_9259","inst_9269","inst_9270","cljs.core.async.impl.ioc-helpers/take!","statearr-9303","statearr-9305","statearr-9307","statearr-9309","inst_9284","inst_9260","inst_9257","cljs.core.get","inst_9261","inst_9262","statearr-9319","statearr-9320","statearr-9321","statearr-9323","inst_9277","statearr-9324","statearr-9327","inst_9281","statearr-9330","statearr-9332","inst_9197","inst_9212","inst_9213","inst_9214","inst_9215","cljs.core/PROTOCOL_SENTINEL","inst_9216","statearr-9335","statearr-9336","inst_9236","inst_9237","cljs.core/not","statearr-9337","statearr-9338","inst_9209","inst_9210","statearr-9339","statearr-9341","statearr-9342","inst_9264","inst_9266","inst_9267","statearr-9343","inst_9249","statearr-9345","inst_9228","inst_9229","inst_9230","statearr-9347","statearr-9349","inst_9225","statearr-9351","inst_9223","statearr-9352","statearr-9353","inst_9240","inst_9241","inst_9243","inst_9244","inst_9245","statearr-9354","statearr-9355","inst_9272","inst_9273","inst_9275","statearr-9357","inst_9252","statearr-9360","statearr-9361","statearr-9362","statearr-9363","inst_9220","statearr-9364","statearr-9365","e9366","statearr-9367","statearr-9369","statearr-9372","cljs.core.pr_str","cljs.reader.read_string","cljs.core.async/close!","js/chess","js/chess.engine","js/chess.engine.worker-engine","js/chess.engine.worker-engine.work-chan","chess.engine.worker-engine/work-chan","js/chess.engine.worker-engine.worker-chan-chan","chess.engine.worker-engine/worker-chan-chan","js/chess.engine.worker-engine._","chess.engine.worker-engine/_","seq__9375","chunk__9376","count__9377","i__9378","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/next","i","cljs.core.range","state_9409","state_val_9410","inst_9405","inst_9407","statearr-9411","e9412","statearr-9413","statearr-9414","statearr-9415","state_9420","state_val_9421","inst_9416","inst_9418","statearr-9422","e9423","statearr-9424","statearr-9425","statearr-9426","state_9494","state_val_9495","statearr-9496","inst_9473","statearr-9497","inst_9487","statearr-9498","statearr-9499","inst_9457","inst_9465","inst_9466","inst_9467","inst_9468","inst_9469","statearr-9500","statearr-9501","inst_9478","statearr-9502","inst_9462","inst_9463","statearr-9503","statearr-9504","statearr-9505","statearr-9506","inst_9489","inst_9458","statearr-9507","statearr-9508","inst_9476","statearr-9509","statearr-9510","inst_9431","inst_9436","inst_9437","inst_9438","inst_9439","inst_9440","statearr-9511","statearr-9512","inst_9456","statearr-9513","statearr-9514","inst_9433","inst_9434","statearr-9515","statearr-9516","statearr-9517","inst_9481","inst_9482","inst_9483","inst_9484","inst_9485","statearr-9518","statearr-9519","inst_9452","inst_9453","inst_9454","statearr-9520","inst_9449","statearr-9521","inst_9447","statearr-9522","statearr-9523","inst_9492","statearr-9524","statearr-9525","statearr-9526","inst_9444","statearr-9527","statearr-9528","e9529","statearr-9530","statearr-9531","statearr-9532","cljs.core.async.pipe","chess.engine.worker-engine/submit-command","worker-chan","form","state_9544","state_val_9545","inst_9533","inst_9534","inst_9535","inst_9536","cljs.core/PersistentHashMap","statearr-9546","inst_9538","statearr-9547","inst_9540","statearr-9548","inst_9542","statearr-9549","statearr-9550","e9551","statearr-9552","statearr-9553","statearr-9554","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","seq9555","self__4724__auto__","x","chess.utils.screen_print","cljs.core/last","chess.engine.worker-engine/dispatch","literal","state_9565","state_val_9566","inst_9556","inst_9557","inst_9558","inst_9559","statearr-9567","inst_9561","statearr-9568","inst_9563","statearr-9569","e9570","statearr-9571","statearr-9572","statearr-9573","chess.engine.worker-engine/worker-engine","js/chess.engine.worker-engine.t_chess$engine$worker_engine9574","chess.engine.worker-engine/t_chess$engine$worker_engine9574","_9576","meta9575","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","chess.engine.worker-engine/->t_chess$engine$worker_engine9574","_","board","move","chess.engine.worker_engine.printl","state_9587","state_val_9588","inst_9578","form9577","cljs.core/Symbol","cljs.core._EQ_","cljs.core.symbol","clojure.walk/postwalk","p1__7211__7212__auto__","cljs.core/seq?","cljs.core/cons","inst_9579","inst_9580","inst_9581","inst_9583","inst_9584","inst_9585","statearr-9589","e9590","statearr-9591","statearr-9592","statearr-9593","color","state_9604","state_val_9605","inst_9595","form9594","inst_9596","inst_9597","inst_9598","inst_9600","inst_9601","inst_9602","statearr-9606","e9607","statearr-9608","statearr-9609","statearr-9610","chess.engine.local-engine/local-engine","cljs.core.map","state_9636","state_val_9637","inst_9627","form9626","inst_9628","inst_9629","inst_9630","inst_9632","inst_9633","inst_9634","statearr-9638","e9639","statearr-9640","statearr-9641","statearr-9642","cljs.core.async.merge","cljs.core.async/reduce","a","b","chess.utils/maxf","cljs.core/second","state_9624","state_val_9625","inst_9611","inst_9612","cljs.core/PersistentVector","inst_9613","inst_9614","inst_9615","inst_9616","inst_9617","inst_9619","inst_9620","inst_9621","inst_9622","statearr-9643","e9644","statearr-9645","statearr-9646","statearr-9647"],"sourcesContent":["(ns chess.engine.worker-engine\n  (:require [\n             chess.engine.core :refer [Engine\n                                       other-color\n                                       apply-move\n                                       possible-moves\n                                       best-move]]\n            [clojure.core.async :as async :refer [go go-loop >! <! chan close!]]\n            [chess.engine.local-engine :refer [local-engine]]\n            [cljs.reader :refer [read-string]]\n            [clojure.walk :as walk]\n            [chess.utils :refer [screen-print zip match plusminus maxf literalize]]))\n\n(declare submit-command\n         printl)\n\n(defn load-worker [filename id]\n  \"loads the worker by filename. usage:\n  (let [c (chan)]\n    (>! (load-worker fname) {:rc c :form query})\n    (prn 'got response: ' (<! c)))\"\n  (let [c (chan 1)\n        reply-chan (chan 1)\n        worker (js/Worker. filename)]\n    (aset worker \"onmessage\" (fn [^js e] (->> e\n                                                         (.-data)\n                                                         (printl)\n                                                         (>! reply-chan)\n                                                         (go))))\n    (go-loop [{:keys [rc form]} (<! c)]\n             (if (not (nil? form))\n               (do\n                 (printl \"worker \" id \" starting work\")\n                 (.postMessage worker (pr-str form))\n                 (>! rc (read-string (<! reply-chan)))\n                 (printl \"worker \" id \" finished work\")\n                 (close! rc)\n                 (recur (<! c)))))\n    c))\n\n; 'work' the form {:rc (response channel) :form (form to be executed)}\n(defonce work-chan (chan 30))\n(defonce worker-chan-chan (chan 30))\n(defonce _ (do\n             ; initially load 4 workers\n             (doseq [i (range 4)]\n               (go (>! worker-chan-chan (load-worker \"js/worker.js\" i))))\n\n             ; do the recurrent loop to submit work\n             (go-loop [{:keys [rc form]} (<! work-chan)\n                       worker-chan (<! worker-chan-chan)]\n                      (async/pipe (submit-command worker-chan form) rc)\n                      (recur (<! work-chan) (<! worker-chan-chan)))))\n\n(defn submit-command [worker-chan form]\n  (go (let [rc (chan 1)]; need to have buffer because it will get locked.. I think\n        (>! worker-chan\n            {:rc rc :form form}); rc get's closed by the go loop in load-worker\n        (let [resp (<! rc)]\n          (>! worker-chan-chan worker-chan)\n          resp))))\n\n(defn printl [& x]\n  (screen-print \"printl: \" x)\n  (last x))\n\n(defn dispatch [literal]\n  (go (let [rc (chan 1)]\n        (>! work-chan {:rc rc :form literal})\n        (<! rc))))\n\n(def worker-engine\n    (reify Engine\n      (apply-move [_ board move] (->> (literalize [board move]\n                                                       (require '[chess.engine.core :refer [Engine apply-move possible-moves best-move]]\n                                                                '[chess.engine.local-engine :refer [local-engine]])\n                                                       (apply-move local-engine board move))\n                                           (dispatch)\n                                           (<!)\n                                           (:value)\n                                           (printl)\n                                           (go)))\n\n      (possible-moves [_ board color] (->> (literalize [board color]\n                                                       (require '[chess.engine.core :refer [Engine apply-move possible-moves best-move]]\n                                                                '[chess.engine.local-engine :refer [local-engine]])\n                                                       (possible-moves local-engine board color))\n                                           (dispatch)\n                                           (<!)\n                                           (:value)\n                                           (printl)\n                                           (go)))\n      \n      (best-move [_ board color]\n        (->> (possible-moves local-engine board color)\n             (map (fn [move] (->> (literalize [board move]\n                                              (require '[chess.engine.local-engine :refer [move-value]])\n                                              [move (move-value board move 2)])\n                                  (dispatch)\n                                  (<!)\n                                  (:value)\n                                  (printl)\n                                  (go))))\n             (async/merge)\n             (async/reduce (fn [a b] (cons b a)) [])\n             (<!)\n             (maxf second)\n             (printl \"final result\")\n             (first)\n             (go)))))\n"]}