{"version":3,"sources":["chess/worker.cljs"],"mappings":";;;;;AASA,AAAA,AAAMA;AAAN,AACE,AAACC,AACC,AAAKC;AAAL,AACE,AAAA,AAACC,AAAeD;;AAChB,AAAME,AAAE,AAAAC,AAAO,AAAA,AAAMH;AAAb,AAAA,AAAA,AAAAI,AAAA,AAAAD;AACW,AAACE,AAAMC,AAAW,AAACC,AAAKC,AAAa,AAAA,AAAA,AAACR,AAAAA,AAAAA;;AADjD,AAAA,AAAAI,AAAA,AAAAD;AAEU,AAACE,AAAMI,AAAU,AAACF,AAAKC,AAAa,AAAA,AAAA,AAACR,AAAAA,AAAAA;;AAF/C,AAAA,AAAAI,AAAA,AAAAD;AAGe,AAACE,AAAMK,AAAe,AAACH,AAAKC,AAAa,AAAA,AAAA,AAACR,AAAAA,AAAAA;;AAHzD,AAAA;;;;;;AAAR,AAKE,AAAA,AAACC,AAAoBC;;AACrBA","names":["chess.worker/init","chess.utils/init-worker","msg","cljs.core.prn","r","matchie38223","cljs.core._EQ_","cljs.core.apply","chess.engine.core/apply-move","cljs.core/cons","chess.engine.local-engine/local-engine","chess.engine.core/best-move","chess.engine.core/possible-moves"],"sourcesContent":["(ns chess.worker\n  (:require [chess.engine.core :refer [Engine\n                                       other-color\n                                       apply-move\n                                       possible-moves\n                                       best-move]]\n            [chess.engine.local-engine :refer [local-engine]]\n            [chess.utils :refer [init-worker match]]))\n\n(defn init []\n  (init-worker\n    (fn [msg]\n      (prn \"got msg \" msg)\n      (let [r (match (:cmd msg)\n             :apply-move (apply apply-move (cons local-engine (msg :args)))\n             :best-move (apply best-move (cons local-engine (msg :args)))\n             :possible-moves (apply possible-moves (cons local-engine (msg :args)))\n             :else \"no dice!\")]\n        (prn \"got response \" r)\n        r))))\n"]}