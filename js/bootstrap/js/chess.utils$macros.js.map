{"version":3,"sources":["chess/utils$macros.cljc"],"mappings":";AAGA,AAAAA,AAAA;AAAA,AAAA,AAAAC,AAAUM;AAAV,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAAG,AAAAC,AAAUF,AAAOU,AAAOC;AAAxB,AACE,AAAMM,AAAQ,AAAA,AAACC;AAAf,AAAA,AAAAN,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAJ,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAH,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACUE,AAASP,AAEV,AAAA,AAAOgB;AAAPP,AACoCR;AADpCS,AAAAD;AAAAE,AAAA,AAAAR,AAAAO;AAAAE,AAAA,AAAAjB,AAAAgB;AAAAA,AAAA,AAAAf,AAAAe;AAAAC,AACQK;AADRL,AAAA,AAAAjB,AAAAgB;AAAAA,AAAA,AAAAf,AAAAe;AAAAC,AACgBM;AADhBP,AACyBQ;AADzB,AAAA,AAAOH,AAAAA;AAAPP,AAAAA;;AAAA,AAAA,AAAOO,AAAAA;AAAPH,AAAAJ;AAAAK,AAAA,AAAAX,AAAAU;AAAAE,AAAA,AAAApB,AAAAmB;AAAAA,AAAA,AAAAlB,AAAAkB;AAAAC,AACQE;AADRF,AAAA,AAAApB,AAAAmB;AAAAA,AAAA,AAAAlB,AAAAkB;AAAAC,AACgBG;AADhBJ,AACyBK;AADzB,AAEE,AAAI,AAAA,AAAMF;AACRD;;AACA,AAAI,AAAA,AAACI,AAAQH;AACX,AAAA,AAAA,AAACb,AAAOY,AAAaE;;AACrB,AAAO,AAAA,AAAA,AAAAhB,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAACD,AAAOY,AAAYC,AAASV,AAASW;AACtCC;;;;;;;;AAVtB,AAAA,AAAA;;;AADF,AAAA,AAAA,AAAU7B;;AAAV;AAAA,AAAA,AAAA,AAAAG,AAAUH;AAAV,AAAA,AAAAI,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAI,AAAA,AAAAF,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAK,AAAA,AAAAH,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAM,AAAA;AAAA,AAAA,AAAAA,AAAAL,AAAAG,AAAAC,AAAAL;;;AAAA;;;AAAA,AAAA,AAAA,AAAA,AAAUH;;AAAVP,AAaA,AAAA,AAAMsC,AAAQC,AAAEC;AAAhB,AACE,AAAA,AAAOP;AAAPQ,AAC6BD;AAD7BE,AAAAD;AAAAE,AAAA,AAAAvB,AAAAsB;AAAAE,AAAA,AAAAhC,AAAA+B;AAAAA,AAAA,AAAA9B,AAAA8B;AAAAC,AACQI;AADRJ,AAAA,AAAAhC,AAAA+B;AAAAA,AAAA,AAAA9B,AAAA8B;AAAAC,AACYK;AADZN,AACkBP;AADlB,AAAA,AAAOH,AAAAA;AAAPQ,AAAAA;;AAAA,AAAA,AAAOR,AAAAA;AAAPY,AAAAJ;AAAAK,AAAA,AAAA1B,AAAAyB;AAAAE,AAAA,AAAAnC,AAAAkC;AAAAA,AAAA,AAAAjC,AAAAiC;AAAAC,AACQC;AADRD,AAAA,AAAAnC,AAAAkC;AAAAA,AAAA,AAAAjC,AAAAiC;AAAAC,AACYE;AADZH,AACkBV;AADlB,AAEE,AAACc,AAAMF,AAAIC;;AACX,AAAI,AAAA,AAAMD;AACRf;;AACA,AAAO,AAAA,AAACZ,AAAOY,AAAOe,AAAI,AAACT,AAAAA,AAAAA,AAAEU,AAAAA;AACtBb;;;;;;;;AAEb,AAAApC,AAAA;AAAA,AAAA,AAAAC,AAAUkD;AAAV,AAAA,AAAAjD,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAiD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA9C;;;AAAA,AAAA,AAAA,AAAA,AAAAG,AAAAC,AAAU0C,AAAYK,AAAUC;AAAhC,AACE,AAAMC,AAAK,AAAA,AAAA,AAACjC;AAAZ,AAAA,AAAAN,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAH,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAJ,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAH,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAESoC,AAAc,AAACC,AAAO,AAAKnB;AAAL,AAAA,AAAA,AAAAryBoC,AAAUA,AAAelB,AAAsDA;AAFvI,AAAAlB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAH,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAH,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAE4IkC,AAAgBE,AAClJD;;;AAJZ,AAAA,AAAA,AAAUN;;AAAV;AAAA,AAAA,AAAA,AAAAC,AAAUD;AAAV,AAAA,AAAAE,AAAA,AAAAzC,AAAAwC;AAAAA,AAAA,AAAAvC,AAAAuC;AAAAE,AAAA,AAAA1C,AAAAwC;AAAAA,AAAA,AAAAvC,AAAAuC;AAAAG,AAAA,AAAA3C,AAAAwC;AAAAA,AAAA,AAAAvC,AAAAuC;AAAA,AAAA,AAAApC,AAAA;AAAA,AAAA,AAAAA,AAAAqC,AAAAC,AAAAC,AAAAH;;;AAAA;;;AAAA,AAAA,AAAA,AAAA,AAAUD;;AAAVnD,AAMA,AAAAA,AAAA,AAAA,AAAAQ,AAAAC,AAAUmD,AAAWC,AAAY5C;AAAjC,AAAA,AAAAE,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAJ,AAAA,AAAAC,AAAA,AAAAC,AACW,AAACiB,AAAO,AAAKwB;AAAL,AAAA,AAAWA,AAAI,AAAAC,AAAa,AAAA,AAASD;AAAtB,AAAA,AAAAC,AAAAA,AAACC,AAAAA,AAAAA;;AADnC,AAAA,AAAA,AAAA,AAAA1C,AAAA,AAAA,AAAA,AAAA,AACgEuC,AAC1D5C;;AAFN,AAAA,AAAA,AAAA,AAAU2C;;AAAV5D","names":["ret__4785__auto__","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","chess.utils$macros/match","&form","&env","seq8931","G__8932","cljs.core/first","cljs.core/next","G__8933","G__8934","self__4723__auto__","expr","bodies","cljs.core.sequence","cljs.core/seq","cljs.core.concat","cljs.core/List","cljs.core/vec","matchie","cljs.core.gensym","G__8944","vec__8945","seq__8946","first__8947","vec__8954","seq__8955","first__8956","sofar","matcher","result","remainder","cljs.core._EQ_","chess.utils$macros/maprhs","f","s","G__8960","vec__8961","seq__8962","first__8963","vec__8967","seq__8968","first__8969","lhs","rhs","cljs.core.print","chess.utils$macros/literalize","seq8972","G__8973","G__8974","G__8975","symbols","body","form","cljs.core.mapcat","chess.utils$macros/plusminus","assignments","lit","G__8986","chess.utils$macros/read-string"],"sourcesContent":["(ns chess.utils\n  (:require [clojure.walk :as walk]))\n\n(defmacro match [expr & bodies]\n  (let [matchie (gensym \"matchie\")]\n    `(let [~matchie ~expr]\n       (cond\n         ~@(loop [sofar []\n                  [matcher result & remainder] bodies]\n             (if (nil? matcher)\n               sofar\n               (if (= :else matcher)\n                 (concat sofar [:else result])\n                 (recur (concat sofar [`(= ~matcher ~matchie) result])\n                        remainder))))))))\n\n(defn maprhs [f s]\n  (loop [sofar []\n         [lhs rhs & remainder] s]\n    (print lhs rhs)\n    (if (nil? lhs)\n      sofar\n      (recur (concat sofar [lhs (f rhs)])\n             remainder))))\n\n(defmacro literalize [symbols & body]\n  (let [form (gensym 'form)]\n  `(walk/postwalk\n     (fn [~form] (cond ~@(mapcat (fn [s] [`(and (symbol? ~form) (= ~form (symbol '~s))) `(walk/postwalk #(if (seq? %) (cons 'list %) %) ~s)]) symbols) :else ~form))\n     '(do ~@body))))\n\n(defmacro plusminus [assignments expr]\n  `(for [~@(maprhs (fn [lit] [lit (read-string (str \"-\" lit))]) assignments)]\n     ~expr))\n"]}